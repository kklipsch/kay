- name: Copy test files over
  copy: src=sandbox/info/ dest="{{ test_directory.stdout }}"

- name: info with no params is std out 
  command: chdir="{{ test_directory.stdout }}" "{{ kay_app.stdout }}" info info_file.doc  
  register: no_params

- name: info has values 
  assert: 
        that: 
        - "'Year:1947' in no_params.stdout"
        - "'Tags:[foo bar]' in no_params.stdout"
        - "'Note:working on a note' in no_params.stdout"


- name: json info 
  command: chdir="{{ test_directory.stdout }}" "{{ kay_app.stdout }}" info -m json info_file.doc  
  register: json_out

- set_fact:
    json_fact: "{{ json_out.stdout|from_json }}"

- name: json has values 
  assert: 
        that: 
        - "json_fact.Year == 1947"
        - "json_fact.Tags[0] == 'foo'"
        - "json_fact.Tags[1] == 'bar'"
        - "json_fact.Note == 'working on a note'"
        - "json_fact.DateAdded != ''"
        - "json_fact.LastWritten != ''"

- name: year info 
  command: chdir="{{ test_directory.stdout }}" "{{ kay_app.stdout }}" info -m year info_file.doc  
  register: year

- name: test year
  fail: msg="year not 1947"
  when: year.stdout != '1947'

- name: note info 
  command: chdir="{{ test_directory.stdout }}" "{{ kay_app.stdout }}" info -m note info_file.doc  
  register: note

- name: test note
  fail: msg="note not gotten"
  when: note.stdout != 'working on a note'

- name: tags info 
  command: chdir="{{ test_directory.stdout }}" "{{ kay_app.stdout }}" info -m tags info_file.doc  
  register: tags

- name: test tags
  fail: msg="tags not gotten"
  when: tags.stdout != 'foo\nbar'

- name: DateAdded info 
  command: chdir="{{ test_directory.stdout }}" "{{ kay_app.stdout }}" info -m added info_file.doc  
  register: added

- name: test added
  fail: msg="added not gotten"
  when: added.stdout == ''

- name: LastWritten info 
  command: chdir="{{ test_directory.stdout }}" "{{ kay_app.stdout }}" info -m written info_file.doc  
  register: written

- name: test written
  fail: msg="written not gotten"
  when: written.stdout == ''

